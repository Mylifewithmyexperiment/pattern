apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    /*defaultConfig {

        multiDexEnabled true
        applicationId "sterliteapp.com.sterlitemobilecardappdesign"
        minSdkVersion 22
        targetSdkVersion 27
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }*/
    def versionPropsFile = file('version.properties')
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1"
        // I set it to minus one so the first build is 0 which isn't super important.
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    println " $runTasks"



    if (":app:assembleDebug" in runTasks) {
        value = 1
    }

    def mVersionName = ""
    def mFileName = ""

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        /*versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + value).toString()
        versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + value).toString()*/
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + value).toString()
        if (versionProps['VERSION_BUILD'].toInteger() >= 15 || versionProps['VERSION_PATCH'].toInteger() >= 15) {
            if (versionProps['VERSION_PATCH'].toInteger() >= 15 && versionProps['VERSION_BUILD'].toInteger() >= 15) {

                versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + value).toString()
                versionProps['VERSION_PATCH'] = (value + 1).toString()
                versionProps['VERSION_BUILD'] = (value).toString()

            } else if (versionProps['VERSION_PATCH'].toInteger() >= 15 && versionProps['VERSION_BUILD'].toInteger() < 15) {
                versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + value).toString()
                versionProps['VERSION_PATCH'] = (value).toString()

            } else {
                versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + value).toString()
                versionProps['VERSION_BUILD'] = (value).toString()
            }

        }
        /* else{
            versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + value).toString()
        }
*/
        versionProps.store(versionPropsFile.newWriter(), null)

        // 1: change major and minor version here
        mVersionName = "v${versionProps['VERSION_NUMBER']}.${versionProps['VERSION_PATCH']}.${versionProps['VERSION_BUILD']}"
        // 2: change AppName for your app name
        mFileName = "DEALER-${mVersionName}.apk"

        defaultConfig {

            multiDexEnabled true
            applicationId "com.sterlite.dccmappfordealersterlite"
            minSdkVersion 22
            targetSdkVersion 27
            vectorDrawables.useSupportLibrary = true
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${mVersionName}"
        }

    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    // if ("assembleDebug" in runTasks) {
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                outputFileName = mFileName
            }
        }
        // }
    }

    task copyApkFiles(type: Copy) {
        from 'build/outputs/apk/debug'
        into 'apk'
        include mFileName
    }

    afterEvaluate {
        assembleDebug.doLast {
            tasks.copyApkFiles.execute()
        }
    }

    /*   if (versionPropsFile.canRead()) {
           def Properties versionProps = new Properties()

           versionProps.load(new FileInputStream(versionPropsFile))
           def name = versionProps['VERSION_NAME']
           def code = versionProps['VERSION_CODE'].toInteger() + 1
           versionProps['VERSION_CODE']=code.toString()
           versionProps.store(versionPropsFile.newWriter(), null)

           defaultConfig {

               multiDexEnabled true
               applicationId "sterliteapp.com.sterlitemobilecardappdesign"
               minSdkVersion 22
               targetSdkVersion 27
               versionName name
               versionCode code
               vectorDrawables.useSupportLibrary = true
               testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
           }
       }
       else {
           throw new GradleException("Could not read version.properties!")
       }

   */
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation('com.android.support:appcompat-v7:27.1.1') {
        transitive = true
    }
    implementation 'com.txusballesteros:FitChart:1.0'
    implementation 'com.github.warkiz.widget:indicatorseekbar:2.1.0'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.3.1'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.intuit.sdp:sdp-android:1.0.5'
    implementation 'com.intuit.ssp:ssp-android:1.0.5'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.fxn769:pix:1.0.5'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'
    //    https://github.com/journeyapps/zxing-android-embedded for qr code
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.github.vipulasri:timelineview:1.0.6'
    //    facebooklogin https://developers.facebook.com/docs/facebook-login/android/
//    implementation 'com.facebook.android:facebook-login:4.38.1'
    implementation 'com.facebook.android:facebook-android-sdk:4.23.0'
    //https://github.com/AAkira/ExpandableLayout side menu
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar'
    implementation 'com.ogaclejapan.arclayout:library:1.1.0@aar'
    implementation files('libs/jackson-all-1.9.9.jar')

    implementation 'com.crystal:crystalrangeseekbar:1.1.3'

    implementation 'com.squareup.retrofit:retrofit:1.9.0'
    implementation 'com.squareup.okhttp:okhttp:2.5.0'
    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'

    implementation 'com.google.android.gms:play-services-analytics:16.0.5'
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    implementation 'com.github.maayyaannkk:ImagePicker:1.0.1'
    implementation 'com.github.sujithkanna:smileyrating:1.6.8'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true;
    }
    implementation project(':sterlitelibrary')
    implementation project(':chatsdk-debug1')


}
apply plugin: 'com.google.gms.google-services'
